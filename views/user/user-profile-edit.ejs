<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile</title>
    <link rel="stylesheet" href="/user/css/profile-sidebar.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Roboto', sans-serif;
        }

        body {
            background-color: #f9fafb;
            color: #333;
            margin: 0;
            padding: 0;
        }

        /* Wrapper for Layout */
        .wrapper {
            display: flex;
            min-height: calc(100vh - 80px); /* Full height minus navbar */
        }

        /* Main Content Styling */
        .main-content {
            flex: 1;
            padding: 20px;
            background-color: #f9fafb;
            min-height: calc(100vh - 80px);
        }

        .edit-profile-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 24px;
            width: 100%;
            margin: 0 auto;
        }

        .edit-profile-container h1 {
            font-size: 24px;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 16px;
        }

        .form-group label {
            display: block;
            font-size: 14px;
            font-weight: 500;
            color: #555;
            margin-bottom: 6px;
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ddd;
            border-radius: 4px;
            outline: none;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus {
            border-color: #ff6f61;
        }

        .button-group {
            display: flex;
            justify-content: flex-start;
            margin-top: 20px;
        }

        .button-group button {
            padding: 10px 20px;
            font-size: 14px;
            font-weight: 500;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .error-message {
            color: #ff6f61;
            font-size: 12px;
            margin-top: 4px;
        }

        .button-group button[type="submit"] {
            background-color: #ff6f61;
            color: #fff;
            margin-right: 10px;
        }

        .button-group button[type="submit"]:hover {
            background-color: #e5645a;
        }

        .button-group button[type="button"] {
            background-color: #6c757d;
            color: #fff;
        }

        .button-group button[type="button"]:hover {
            background-color: #5a6268;
        }

        @media (max-width: 768px) {
            .wrapper {
                flex-direction: column;
            }

            .main-content {
                padding: 10px;
                min-height: auto;
            }
        }

        @media (max-width: 480px) {
            .edit-profile-container {
                padding: 16px;
            }

            .button-group {
                flex-direction: column;
            }

            .button-group button[type="submit"] {
                margin-right: 0;
                margin-bottom: 10px;
            }
        }
    </style>
</head>
<body>
  <%-include('../partials/user/profile-sidebar-header')%>

  <div class="wrapper">
      <div class="main-content">
          <div class="edit-profile-container">
              <h1>Edit Profile</h1>
              <form id="edit-profile-form">
                  <div class="form-group">
                      <label for="full-name">Full Name</label>
                      <input type="text" id="full-name" name="fullName" value="<%= user.name %>">
                      <div id="full-name-error" class="error-message"></div>
                  </div>
                  <div class="form-group">
                      <label for="email">Email Address</label>
                      <input type="email" id="email" name="email" value="<%= user.email %>">
                      <div id="email-error" class="error-message"></div>
                  </div>
                  <div class="form-group">
                      <label for="mobile">Mobile Number</label>
                      <input type="tel" id="mobile" name="mobile" value="<%= user.phone %>">
                      <div id="mobile-error" class="error-message"></div>
                  </div>
                  <div class="button-group">
                      <button type="submit">Save Changes</button>
                      <button type="button" onclick="window.location.href='/userProfile'">Cancel</button>
                  </div>
              </form>
          </div>
      </div>
  </div>

  <%-include('../partials/user/profile-sidebar-footer')%>

  <script>
      document.addEventListener('DOMContentLoaded', function () {
          const form = document.getElementById('edit-profile-form');
          const fullName = document.getElementById('full-name');
          const email = document.getElementById('email');
          const mobile = document.getElementById('mobile');

          const fullNameError = document.getElementById('full-name-error');
          const emailError = document.getElementById('email-error');
          const mobileError = document.getElementById('mobile-error');

          form.addEventListener('submit', function (e) {
              e.preventDefault(); // Prevent default form submission

              // Reset previous errors
              fullNameError.textContent = '';
              emailError.textContent = '';
              mobileError.textContent = '';

              let isValid = true;

              // Validate full name
              if (fullName.value.trim() === '') {
                  fullNameError.textContent = 'Full name is required.';
                  isValid = false;
              }

              // Validate email
              if (email.value.trim() === '') {
                  emailError.textContent = 'Email is required.';
                  isValid = false;
              } else if (!email.value.includes('@')) {
                  emailError.textContent = 'Invalid email format.';
                  isValid = false;
              }

              // Validate mobile number (10 digits only)
              const mobileRegex = /^[0-9]{10}$/;
              if (mobile.value.trim() === '') {
                  mobileError.textContent = 'Mobile number is required.';
                  isValid = false;
              } else if (!mobileRegex.test(mobile.value.trim())) {
                  mobileError.textContent = 'Invalid mobile number (10 digits only).';
                  isValid = false;
              }

              // If all fields are valid, send data using Fetch API
              if (isValid) {
                  const formData = {
                      fullName: fullName.value.trim(),
                      email: email.value.trim(),
                      mobile: mobile.value.trim(),
                  };

                  fetch('/editUserProfile', {
                      method: 'PUT',
                      headers: {
                          'Content-Type': 'application/json',
                      },
                      body: JSON.stringify(formData),
                  })
                  .then(response => response.json())
                  .then(data => {
                      if (data.success) {
                          Swal.fire({
                              icon: 'success',
                              title: 'Profile Updated!',
                              text: 'Your profile has been successfully updated.',
                              confirmButtonText: 'OK'
                          }).then(() => {
                              window.location.href = '/userProfile'; // Redirect to profile page
                          });
                      } else {
                          Swal.fire({
                              icon: 'error',
                              title: 'Error',
                              text: data.message,
                              confirmButtonText: 'OK'
                          });
                      }
                  })
                  .catch(error => {
                      console.error('Error while changing user profile:', error);
                      Swal.fire({
                          icon: 'error',
                          title: 'Error',
                          text: 'An error occurred while updating your profile.',
                          confirmButtonText: 'OK'
                      });
                  });
              }
          });
      });
  </script>
</body>
</html>