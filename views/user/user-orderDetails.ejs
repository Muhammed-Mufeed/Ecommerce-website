<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link rel="stylesheet" href="/user/css/profile-sidebar.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        /* Enhancing the existing styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
}

body {
    background-color: #f9fafb;
    color: #333;
    margin: 0;
    padding: 0;
}

/* Wrapper for Layout */
.wrapper {
    display: flex;
    min-height: calc(100vh - 80px); /* Full height minus navbar */
}

/* Main Content Styling */
.main-content {
    flex: 1;
    padding: 20px;
    background-color: #f9fafb;
    min-height: calc(100vh - 80px);
}

.order-details-container {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    padding: 28px;
    width: 100%;
    margin: 0 auto;
    position: relative;
}

.order-details-container h1 {
    font-size: 26px;
    font-weight: 700;
    color: #2d3748;
    margin-bottom: 24px;
    border-bottom: 1px solid #edf2f7;
    padding-bottom: 12px;
}

.order-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px;
    background-color: #f8fafc;
    border-radius: 6px;
    margin-bottom: 20px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.order-id {
    font-weight: 700;
    color: #2d3748;
    font-size: 16px;
}

.order-date {
    color: #64748b;
    font-size: 14px;
    margin-top: 4px;
}

.order-status {
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-pending {
    background-color: #fff3cd;
    color: #856404;
}

.status-shipped {
    background-color: #cce5ff;
    color: #004085;
}

.status-delivered {
    background-color: #d4edda;
    color: #155724;
}

.status-cancelled {
    background-color: #f8d7da;
    color: #721c24;
}

.order-items {
    margin-bottom: 24px;
}

.item {
    display: flex;
    align-items: center;
    padding: 16px 0;
    border-bottom: 1px solid #f0f0f0;
    transition: background-color 0.2s ease;
}

.item:hover {
    background-color: #f9fafb;
}

.item:last-child {
    border-bottom: none;
}

.item-image {
    width: 80px;
    height: 80px;
    border-radius: 6px;
    background-color: #f0f0f0;
    margin-right: 16px;
    object-fit: contain;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.item-info {
    flex: 1;
}

.item-name {
    font-weight: 600;
    margin-bottom: 6px;
    color: #2d3748;
    font-size: 16px;
}

.item-variant {
    font-size: 14px;
    color: #64748b;
    margin-bottom: 6px;
}

.item-price {
    color: #2d3748;
    font-weight: 700;
    font-size: 15px;
}

.item-quantity {
    color: #64748b;
    font-size: 14px;
    margin-top: 4px;
}

.order-summary {
    display: flex;
    justify-content: space-between;
    padding-top: 20px;
    border-top: 1px solid #edf2f7;
    margin-top: 8px;
}

.address-details {
    flex: 2;
    padding-right: 24px;
}

.address-title {
    font-weight: 700;
    margin-bottom: 10px;
    font-size: 15px;
    color: #2d3748;
}

.address-text {
    font-size: 14px;
    line-height: 1.6;
    color: #64748b;
}

.payment-details {
    flex: 1;
    text-align: right;
    padding-left: 24px;
    border-left: 1px solid #edf2f7;
}

.payment-method {
    font-size: 14px;
    color: #64748b;
    margin-bottom: 10px;
}

.total-amount {
    font-size: 18px;
    font-weight: 700;
    color: #2d3748;
    padding: 8px 0;
}

/* Properly position and style the order actions */
.order-actions {
    margin-top: 20px;
    padding: 0 28px 28px;
    display: flex;
    justify-content: flex-end;
    background-color: #fff;
    border-radius: 0 0 8px 8px;
    margin: 0 auto;
    width: 100%;
    max-width: 100%;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
}

.btn {
    padding: 2px 5px;
    border-radius: 6px;
    font-weight: 600;
    font-size: 14px;
    cursor: pointer;
    border: none;
    transition: all 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn-cancel {
    background-color: #e53e3e;
    color: white;
}

.item-status {
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  margin-top: 8px;
  display: inline-block;
}

.status-pending {
  background-color: #fff3cd;
  color: #856404;
}

.status-confirmed {
  background-color: #cce5ff;
  color: #004085;
}

.status-shipped {
  background-color: #d4edda;
  color: #155724;
}

.status-delivered {
  background-color: #d4edda;
  color: #155724;
}

.status-cancelled {
  background-color: #f8d7da;
  color: #721c24;
}

.btn-cancel:hover {
    background-color: #c53030;
    transform: translateY(-1px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
}

@media (max-width: 768px) {
    .wrapper {
        flex-direction: column;
    }

    .main-content {
        padding: 12px;
        min-height: auto;
    }

    .order-details-container {
        padding: 20px;
    }

    .order-header {
        flex-direction: column;
        align-items: flex-start;
    }

    .order-status {
        margin-top: 12px;
    }

    .order-summary {
        flex-direction: column;
    }

    .address-details {
        margin-bottom: 20px;
        padding-right: 0;
    }

    .payment-details {
        text-align: left;
        padding-left: 0;
        border-left: none;
        border-top: 1px solid #edf2f7;
        padding-top: 16px;
    }
    
    .order-actions {
        padding: 0 20px 20px;
    }
}
    </style>
</head>
<body>
    <%-include('../partials/user/profile-sidebar-header')%>
    
    <div class="wrapper">
        <!-- The sidebar will be included from the header partial -->
        
        <div class="main-content">
            <div class="order-details-container">
                <h1>Order Details</h1>
                
                <div class="order-header">
                    <div>
                        <span class="order-id">Order #<%= order.orderId %></span>
                        <div class="order-date">Ordered on <%= new Date(order.createdAt).toLocaleDateString('en-US', { day: '2-digit', month: 'short', year: 'numeric' }) %></div>
                    </div>

                </div>

                <div class="order-items">
                    <% order.items.forEach(item => { %>
                      <div class="item">
                        <img class="item-image" src="<%= item.variant.images[0] || '/images/placeholder.jpg' %>" alt="<%= item.product.name %>">
                        <div class="item-info">
                          <div class="item-name"><%= item.product.name %></div>
                          <div class="item-variant">Color: <%= item.variant.colorName %></div>
                          <div class="item-price">₹<%= item.price.toFixed(2) %></div>
                          <div class="item-quantity">Qty: <%= item.quantity %></div>
                          <div class="item-status status-<%= item.status.toLowerCase() %>">
                            <%= item.status %>
                          </div>
                          <!-- Add cancel button here -->
                          <% if (item.status === 'Pending' ||item.status === 'Confirmed' || item.status === 'Shipped') { %>
                            <button class="btn btn-cancel" onclick="cancelItem('<%= order._id %>', '<%= item._id %>')">
                              Cancel Item
                            </button>
                          <% } %>
                        </div>
                      </div>
                    <% }); %>
                  </div>

                <div class="order-summary">
                    <div class="address-details">
                        <div class="address-title">Delivered to:</div>
                        <div class="address-text">
                            <%= order.address.name %><br>
                            <%= order.address.address %>, <%= order.address.locality %><br>
                            <%= order.address.city %>, <%= order.address.state %> - <%= order.address.pincode %><br>
                            Phone: <%= order.address.mobile %>
                        </div>
                    </div>
                    <div class="payment-details">
                        <div class="payment-method">
                            Payment: <%= order.paymentMethod === 'cod' ? 'Cash on Delivery' : order.paymentMethod %>
                        </div>
                        <div class="total-amount">Total: ₹<%= order.finalAmount.toFixed(2) %></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
      async function cancelItem(orderId, itemId) {
  const { value: reason } = await Swal.fire({
    title: 'Are you sure?',
    text: 'Do you want to cancel this item?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, cancel it!',
    cancelButtonText: 'No, keep it',
    input: 'text', // Add an input field for the cancellation reason
    inputPlaceholder: 'Enter your reason for cancellation...',
    inputValidator: (value) => {
      if (!value) {
        return 'Please provide a reason for cancellation.'; // Require a reason
      }
    },
  });

  if (reason) { // Proceed only if a reason is provided
    try {
      const response = await fetch(`/userOrders/${orderId}/cancelItem/${itemId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ reason }), // Send the reason to the backend
      });

      const data = await response.json();

      if (data.success) {
        Swal.fire({
          icon: 'success',
          title: 'Item Cancelled!',
          text: 'The item has been cancelled successfully.',
          confirmButtonText: 'OK',
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message || 'Failed to cancel the item.',
          confirmButtonText: 'OK',
        });
      }
    } catch (error) {
      console.error('Error while cancelling the item:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Something went wrong. Please try again.',
        confirmButtonText: 'OK',
      });
    }
  }
}
    </script>
    
    <%-include('../partials/user/profile-sidebar-footer')%>
</body>
</html>