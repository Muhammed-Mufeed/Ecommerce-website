<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products - Admin Dashboard</title>
    <link rel="stylesheet" href="/admin/css/products.css">
    <link rel="stylesheet" href="/admin/css/partial.css">
 </head>
 <body>
  <%-include('../partials/admin/header')%>
   <!-- Products Page Content -->
   <div class="products-page">
    <h3>Products List</h3>
    
    <!-- Search Bar -->
    <div class="search-bar">
        <input type="text" id="product-search" placeholder="Search products..." oninput="filterProducts()">
    </div>

    <!-- Add New Product Button -->
    <button class="add-btn" onclick="addProduct()">Add New Product</button>

    <!-- Products Table -->
    <table class="products-table" id="products-table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Stock</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Product 1</td>
                <td>$50</td>
                <td>120</td>
                <td>Available</td>
                <td>
                    <button class="edit-btn" onclick="editProduct(this)">Edit</button>
                    <button class="delete-btn" onclick="deleteProduct(this)">Unlist</button>
                </td>
            </tr>
            <tr>
                <td>Product 2</td>
                <td>$100</td>
                <td>80</td>
                <td>Out of Stock</td>
                <td>
                    <button class="edit-btn" onclick="editProduct(this)">Edit</button>
                    <button class="delete-btn" onclick="deleteProduct(this)">Unlist</button>
                </td>
            </tr>
            <!-- Add more products here as needed -->
        </tbody>
    </table>
</div>
</div>

<script>

      // Function to set the active link based on the current page
    function setActiveMenu() {
        // Get all menu links
        const menuLinks = document.querySelectorAll('.menu-item');
        
        // Remove 'active' class from all menu links
        menuLinks.forEach(link => {
            link.classList.remove('active');
        });
        
        // Get the current page URL
        const currentPage = window.location.pathname;

        // Check which link corresponds to the current page and add the 'active' class
        if (currentPage.includes('/admin/dashboard')) {
            document.getElementById('dashboard-link').classList.add('active');
        } else if (currentPage.includes('/admin/users')) {
            document.getElementById('users-link').classList.add('active');
        } else if (currentPage.includes('/admin/products')) {
            document.getElementById('products-link').classList.add('active');
        } else if (currentPage.includes('/admin/categories')) {
            document.getElementById('categories-link').classList.add('active');
        } else if (currentPage.includes('/admin/orders')) {
            document.getElementById('orders-link').classList.add('active');
        } else if (currentPage.includes('/admin/coupons')) {
            document.getElementById('coupons-link').classList.add('active');
        } else if (currentPage.includes('/admin/settings')) {
            document.getElementById('settings-link').classList.add('active');
        }
    }
    // Run setActiveMenu on page load
    window.onload = setActiveMenu;



     // Function to filter products based on the search input
     function filterProducts() {
            const searchInput = document.getElementById('product-search').value.toLowerCase();
            const rows = document.querySelectorAll('#products-table tbody tr');

            rows.forEach(row => {
                const name = row.cells[0].textContent.toLowerCase();
                const price = row.cells[1].textContent.toLowerCase();
                if (name.includes(searchInput) || price.includes(searchInput)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        // Function to navigate to the Add New Product page
    function addProduct() {
        window.location.href = '/admin/products/add'; // Redirects to the "Add Product" page
    }

    // Function to navigate to the Edit Product page
    function editProduct(button) {
        const row = button.closest('tr');
        const productName = row.cells[0].textContent;
        const productPrice = row.cells[1].textContent;
        
        // You can pass product details via query parameters or as part of the route
        window.location.href = `/admin/products/edit?name=${productName}&price=${productPrice}`; // Redirects to the "Edit Product" page with query parameters
    }

    // Function to simulate deleting a product
    function deleteProduct(button) {
        const row = button.closest('tr');
        row.remove();
        alert('Product removed');
    }
</script>
</body>
</html>